// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mobiBooking.Data;

namespace mobiBooking.Data.Migrations
{
    [DbContext(typeof(MobiBookingDBContext))]
    partial class MobiBookingDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("mobiBooking.Data.Model.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateFrom");

                    b.Property<DateTime>("DateTo");

                    b.Property<int>("OwnerUserId");

                    b.Property<int>("RoomId");

                    b.Property<int>("Status");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("OwnerUserId");

                    b.HasIndex("RoomId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("mobiBooking.Data.Model.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activity");

                    b.Property<string>("Availability");

                    b.Property<bool>("Flipchart");

                    b.Property<string>("Location");

                    b.Property<string>("Name");

                    b.Property<int>("NumberOfPeople");

                    b.Property<bool>("SoundSystem");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("mobiBooking.Data.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Role");

                    b.Property<byte[]>("Salt");

                    b.Property<string>("Surname");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = 1, Email = "m.w@g.pl", Name = "Michał", Password = "32qojE7n/4pJTDxy1/9jDj7xKjWjp9KYyObAsGbvMsA=", Role = "Administrator", Salt = new byte[] { 65, 157, 89, 58, 32, 63, 134, 167, 194, 92, 71, 9, 194, 15, 204, 58 }, Surname = "Test", UserName = "Test" }
                    );
                });

            modelBuilder.Entity("mobiBooking.Data.Model.UserToReservation", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("ReservationId");

                    b.HasKey("UserId", "ReservationId");

                    b.HasIndex("ReservationId");

                    b.ToTable("UsersToReservations");
                });

            modelBuilder.Entity("mobiBooking.Data.Model.Reservation", b =>
                {
                    b.HasOne("mobiBooking.Data.Model.User", "OwnerUser")
                        .WithMany("OwnReservations")
                        .HasForeignKey("OwnerUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("mobiBooking.Data.Model.Room", "Room")
                        .WithMany("Reservations")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("mobiBooking.Data.Model.UserToReservation", b =>
                {
                    b.HasOne("mobiBooking.Data.Model.Reservation", "Reservation")
                        .WithMany("InvitedUsers")
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("mobiBooking.Data.Model.User", "User")
                        .WithMany("Meetings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
